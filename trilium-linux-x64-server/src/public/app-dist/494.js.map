{"version":3,"file":"494.js","mappings":"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","sources":["webpack://trilium/./src/public/app/menus/tree_context_menu.js","webpack://trilium/./src/public/app/services/note_types.js"],"sourcesContent":["import treeService from '../services/tree.js';\nimport froca from \"../services/froca.js\";\nimport clipboard from '../services/clipboard.js';\nimport noteCreateService from \"../services/note_create.js\";\nimport contextMenu from \"./context_menu.js\";\nimport appContext from \"../components/app_context.js\";\nimport noteTypesService from \"../services/note_types.js\";\nimport server from \"../services/server.js\";\nimport toastService from \"../services/toast.js\";\nimport dialogService from \"../services/dialog.js\";\n\nexport default class TreeContextMenu {\n    /**\n     * @param {NoteTreeWidget} treeWidget\n     * @param {FancytreeNode} node\n     */\n    constructor(treeWidget, node) {\n        this.treeWidget = treeWidget;\n        this.node = node;\n    }\n\n    async show(e) {\n        contextMenu.show({\n            x: e.pageX,\n            y: e.pageY,\n            items: await this.getMenuItems(),\n            selectMenuItemHandler: (item, e) => this.selectMenuItemHandler(item)\n        })\n    }\n\n    async getMenuItems() {\n        const note = await froca.getNote(this.node.data.noteId);\n        const branch = froca.getBranch(this.node.data.branchId);\n        const isNotRoot = note.noteId !== 'root';\n        const isHoisted = note.noteId === appContext.tabManager.getActiveContext().hoistedNoteId;\n        const parentNote = isNotRoot ? await froca.getNote(branch.parentNoteId) : null;\n\n        // some actions don't support multi-note, so they are disabled when notes are selected,\n        // the only exception is when the only selected note is the one that was right-clicked, then\n        // it's clear what the user meant to do.\n        const selNodes = this.treeWidget.getSelectedNodes();\n        const noSelectedNotes = selNodes.length === 0\n                || (selNodes.length === 1 && selNodes[0] === this.node);\n\n        const notSearch = note.type !== 'search';\n        const parentNotSearch = !parentNote || parentNote.type !== 'search';\n        const insertNoteAfterEnabled = isNotRoot && !isHoisted && parentNotSearch;\n\n        return [\n            { title: '在新标签打开<kbd>CTRL+鼠标左键</kbd>', command: \"openInTab\", uiIcon: \"bx bx-empty\", enabled: noSelectedNotes },\n            { title: '在新的拆分中打开', command: \"openNoteInSplit\", uiIcon: \"bx bx-dock-right\", enabled: noSelectedNotes },\n            { title: '在后面插入<kbd data-command=\"createNoteAfter\"></kbd>', command: \"insertNoteAfter\", uiIcon: \"bx bx-plus\",\n                items: insertNoteAfterEnabled ? await noteTypesService.getNoteTypeItems(\"insertNoteAfter\") : null,\n                enabled: insertNoteAfterEnabled && noSelectedNotes },\n            { title: '插入子笔记<kbd data-command=\"createNoteInto\"></kbd>', command: \"insertChildNote\", uiIcon: \"bx bx-plus\",\n                items: notSearch ? await noteTypesService.getNoteTypeItems(\"insertChildNote\") : null,\n                enabled: notSearch && noSelectedNotes },\n            { title: '删除<kbd data-command=\"deleteNotes\"></kbd>', command: \"deleteNotes\", uiIcon: \"bx bx-trash\",\n                enabled: isNotRoot && !isHoisted && parentNotSearch },\n            { title: \"----\" },\n            { title: '在子树搜索<kbd data-command=\"searchInSubtree\"></kbd>', command: \"searchInSubtree\", uiIcon: \"bx bx-search\",\n                enabled: notSearch && noSelectedNotes },\n            isHoisted ? null : { title: '提升笔记<kbd data-command=\"toggleNoteHoisting\"></kbd>', command: \"toggleNoteHoisting\", uiIcon: \"bx bx-empty\", enabled: noSelectedNotes && notSearch },\n            !isHoisted || !isNotRoot ? null : { title: '取消提升笔记<kbd data-command=\"toggleNoteHoisting\"></kbd>', command: \"toggleNoteHoisting\", uiIcon: \"bx bx-door-open\" },\n            { title: '编辑分支前缀<kbd data-command=\"editBranchPrefix\"></kbd>', command: \"editBranchPrefix\", uiIcon: \"bx bx-empty\",\n                enabled: isNotRoot && parentNotSearch && noSelectedNotes},\n            { title: \"高级\", uiIcon: \"bx bx-empty\", enabled: true, items: [\n                    { title: '展开子树<kbd data-command=\"expandSubtree\"></kbd>', command: \"expandSubtree\", uiIcon: \"bx bx-expand\", enabled: noSelectedNotes },\n                    { title: '收起子树<kbd data-command=\"collapseSubtree\"></kbd>', command: \"collapseSubtree\", uiIcon: \"bx bx-collapse\", enabled: noSelectedNotes },\n                    { title: '排序<kbd data-command=\"sortChildNotes\"></kbd>', command: \"sortChildNotes\", uiIcon: \"bx bx-empty\", enabled: noSelectedNotes && notSearch },\n                    { title: '子树最近的修改', command: \"recentChangesInSubtree\", uiIcon: \"bx bx-history\", enabled: noSelectedNotes },\n                    { title: '转换为附件', command: \"convertNoteToAttachment\", uiIcon: \"bx bx-empty\", enabled: isNotRoot && !isHoisted },\n                    { title: '复制笔记路径到剪贴板', command: \"copyNotePathToClipboard\", uiIcon: \"bx bx-empty\", enabled: true }\n                ] },\n            { title: \"----\" },\n            { title: \"保护子树\", command: \"protectSubtree\", uiIcon: \"bx bx-check-shield\", enabled: noSelectedNotes },\n            { title: \"取消保护子树\", command: \"unprotectSubtree\", uiIcon: \"bx bx-shield\", enabled: noSelectedNotes },\n            { title: \"----\" },\n            { title: '复制/克隆<kbd data-command=\"copyNotesToClipboard\"></kbd>', command: \"copyNotesToClipboard\", uiIcon: \"bx bx-copy\",\n                enabled: isNotRoot && !isHoisted },\n            { title: '克隆到...<kbd data-command=\"cloneNotesTo\"></kbd>', command: \"cloneNotesTo\", uiIcon: \"bx bx-empty\",\n                enabled: isNotRoot && !isHoisted },\n            { title: '剪切<kbd data-command=\"cutNotesToClipboard\"></kbd>', command: \"cutNotesToClipboard\", uiIcon: \"bx bx-cut\",\n                enabled: isNotRoot && !isHoisted && parentNotSearch },\n            { title: '移动到...<kbd data-command=\"moveNotesTo\"></kbd>', command: \"moveNotesTo\", uiIcon: \"bx bx-empty\",\n                enabled: isNotRoot && !isHoisted && parentNotSearch },\n            { title: '粘贴<kbd data-command=\"pasteNotesFromClipboard\"></kbd>', command: \"pasteNotesFromClipboard\", uiIcon: \"bx bx-paste\",\n                enabled: !clipboard.isClipboardEmpty() && notSearch && noSelectedNotes },\n            { title: '在后面粘贴', command: \"pasteNotesAfterFromClipboard\", uiIcon: \"bx bx-paste\",\n                enabled: !clipboard.isClipboardEmpty() && isNotRoot && !isHoisted && parentNotSearch && noSelectedNotes },\n            { title: `创建子树副本 <kbd data-command=\"duplicateSubtree\">`, command: \"duplicateSubtree\", uiIcon: \"bx bx-empty\",\n                enabled: parentNotSearch && isNotRoot && !isHoisted },\n            { title: \"----\" },\n            { title: \"导出\", command: \"exportNote\", uiIcon: \"bx bx-empty\",\n                enabled: notSearch && noSelectedNotes },\n            { title: \"导入到笔记\", command: \"importIntoNote\", uiIcon: \"bx bx-empty\",\n                enabled: notSearch && noSelectedNotes },\n            { title: \"应用批量动作\", command: \"openBulkActionsDialog\", uiIcon: \"bx bx-list-plus\",\n                enabled: true }\n        ].filter(row => row !== null);\n    }\n\n    async selectMenuItemHandler({command, type, templateNoteId}) {\n        const notePath = treeService.getNotePath(this.node);\n\n        if (command === 'openInTab') {\n            appContext.tabManager.openTabWithNoteWithHoisting(notePath);\n        }\n        else if (command === \"insertNoteAfter\") {\n            const parentNotePath = treeService.getNotePath(this.node.getParent());\n            const isProtected = treeService.getParentProtectedStatus(this.node);\n\n            noteCreateService.createNote(parentNotePath, {\n                target: 'after',\n                targetBranchId: this.node.data.branchId,\n                type: type,\n                isProtected: isProtected,\n                templateNoteId: templateNoteId\n            });\n        }\n        else if (command === \"insertChildNote\") {\n            const parentNotePath = treeService.getNotePath(this.node);\n\n            noteCreateService.createNote(parentNotePath, {\n                type: type,\n                isProtected: this.node.data.isProtected,\n                templateNoteId: templateNoteId\n            });\n        }\n        else if (command === 'openNoteInSplit') {\n            const subContexts = appContext.tabManager.getActiveContext().getSubContexts();\n            const {ntxId} = subContexts[subContexts.length - 1];\n\n            this.treeWidget.triggerCommand(\"openNewNoteSplit\", {ntxId, notePath});\n        }\n        else if (command === 'convertNoteToAttachment') {\n            if (!await dialogService.confirm(`您确定要将所选的笔记转换为其父笔记的附件吗?`)) {\n                return;\n            }\n\n            let converted = 0;\n\n            for (const noteId of this.treeWidget.getSelectedOrActiveNoteIds(this.node)) {\n                const note = await froca.getNote(noteId);\n\n                if (note.isEligibleForConversionToAttachment()) {\n                    const {attachment} = await server.post(`notes/${note.noteId}/convert-to-attachment`);\n\n                    if (attachment) {\n                        converted++;\n                    }\n                }\n            }\n\n            toastService.showMessage(`${converted} 个笔记已被转换为附件.`);\n        }\n        else if (command === 'copyNotePathToClipboard') {\n            navigator.clipboard.writeText('#' + notePath);\n        }\n        else {\n            this.treeWidget.triggerCommand(command, {\n                node: this.node,\n                notePath: notePath,\n                noteId: this.node.data.noteId,\n                selectedOrActiveBranchIds: this.treeWidget.getSelectedOrActiveBranchIds(this.node),\n                selectedOrActiveNoteIds: this.treeWidget.getSelectedOrActiveNoteIds(this.node)\n            });\n        }\n    }\n}\n","import server from \"./server.js\";\nimport froca from \"./froca.js\";\n\nasync function getNoteTypeItems(command) {\n    const items = [\n        { title: \"文本\", command: command, type: \"text\", uiIcon: \"bx bx-note\" },\n        { title: \"代码\", command: command, type: \"code\", uiIcon: \"bx bx-code\" },\n        { title: \"保存的搜索\", command: command, type: \"search\", uiIcon: \"bx bx-file-find\" },\n        { title: \"关系图\", command: command, type: \"relationMap\", uiIcon: \"bx bx-map-alt\" },\n        { title: \"笔记地图\", command: command, type: \"noteMap\", uiIcon: \"bx bx-map-alt\" },\n        { title: \"渲染笔记\", command: command, type: \"render\", uiIcon: \"bx bx-extension\" },\n        { title: \"书\", command: command, type: \"book\", uiIcon: \"bx bx-book\" },\n        { title: \"美人鱼图\", command: command, type: \"mermaid\", uiIcon: \"bx bx-selection\" },\n        { title: \"画布\", command: command, type: \"canvas\", uiIcon: \"bx bx-pen\" },\n        { title: \"网页视图\", command: command, type: \"webView\", uiIcon: \"bx bx-globe-alt\" },\n    ];\n\n    const templateNoteIds = await server.get(\"search-templates\");\n    const templateNotes = await froca.getNotes(templateNoteIds);\n\n    if (templateNotes.length > 0) {\n        items.push({ title: \"----\" });\n\n        for (const templateNote of templateNotes) {\n            items.push({\n                title: templateNote.title,\n                uiIcon: templateNote.getIcon(),\n                command: command,\n                type: templateNote.type,\n                templateNoteId: templateNote.noteId\n            });\n        }\n    }\n\n    return items;\n}\n\nexport default {\n    getNoteTypeItems\n}\n"],"names":["TreeContextMenu","constructor","treeWidget","node","this","async","e","x","pageX","y","pageY","items","getMenuItems","selectMenuItemHandler","item","note","data","noteId","branch","branchId","isNotRoot","isHoisted","hoistedNoteId","parentNote","parentNoteId","selNodes","getSelectedNodes","noSelectedNotes","length","notSearch","type","parentNotSearch","insertNoteAfterEnabled","title","command","uiIcon","enabled","filter","row","templateNoteId","notePath","parentNotePath","getParent","isProtected","target","targetBranchId","subContexts","getSubContexts","ntxId","triggerCommand","converted","getSelectedOrActiveNoteIds","isEligibleForConversionToAttachment","attachment","navigator","clipboard","writeText","selectedOrActiveBranchIds","getSelectedOrActiveBranchIds","selectedOrActiveNoteIds","getNoteTypeItems","templateNoteIds","templateNotes","push","templateNote","getIcon"],"sourceRoot":""}